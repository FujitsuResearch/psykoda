on: [push]
jobs:
  black:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.8"
      - name: install black
        run: pip install black
      - name: black
        run: black --check src tests
  isort:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.8"
      - name: install isort
        run: pip install isort
      - name: isort
        run: isort --check src tests
  pylint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.8"
      - name: install dependencies
        run: |
          curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py | python
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          poetry install --no-interaction
      - name: pylint
        run: |
          poetry run pylint src --output-format=colorized || ec=$?
          poetry run pylint tests --output-format=colorized --disable=protected-access --disable=redefined-outer-name || tec=$?
          echo "exit code: ${ec:-0} (test: ${tec:-0})"
          [ $((2#100111 & ec)) = 0 ]
          # ignore Convention and Refactor.
          # treat Usage error, Warning, Error, Fatal as failure.
          # see bit-encoded exit codes of pylint for detail:
          # https://pylint.pycqa.org/en/latest/user_guide/run.html#exit-codes
  mypy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.8"
      - name: install dependencies
        run: |
          curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py | python
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          poetry install --no-interaction
      - name: mypy
        run: poetry run mypy src tests
